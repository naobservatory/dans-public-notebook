{
  "hash": "20366de12d392e78addf0f730f053043",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simulating the sensitivity of swabs and wastewater\"\ndraft: true\nformat:\n  html:\n    code-fold: false \nexecute:\n  cache: false\nknitr:\n  opts_chunk: \n    message: false\neditor: source \nauthor: Dan Rice\ndate: 2025-07-03\ndate-modified: today\n---\n\n\n\n[Recently](https://naobservatory.org/blog/swab-based-p2ra/),\nwe used our paired wastewater and swab samples to jointly estimate the\ndistribution of viral reads we expect to see in a sample of either type\nwhen a virus is at a given prevalence in the sampled population.\nHere, we use the fitted model to estimate the cumulative incidence at detection\nfor both sample types using the following approach:\n\n1. Simulate an exponentially growing outbreak.\n2. Specify a particular sampling scheme for swabs and wastewater:\nnumber of swabs in a pool, sequencing depth, read length, etc.\n3. For each sample from our posterior distribution of the previously fitted\nread count model, simulate the timecourse of viral reads spanning a junction.\n4. Use the simulations to calculate the joint distribution of cumulative incidence at detection in both sample types.\n\nThis is meant as a quick first pass at the problem, not a definitive\naccount of the merits of swabs vs. wastewater.\n\n# Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(slider)\nlibrary(kableExtra)\n\nset.seed(20250703)\n\ntheme_set(theme_minimal())\n\n# Colors borrowed from https://github.com/JLSteenwyk/ggpubfigs\nwong_eight <- c(\n  \"#E69F00\",\n  \"#56B4E9\",\n  \"#009E73\",\n  \"#F0E442\",\n  \"#0072B2\",\n  \"#D55E00\",\n  \"#CC79A7\",\n  \"#000000\"\n)\noptions(\n  ggplot2.discrete.colour = function()\n    scale_colour_manual(values = wong_eight)\n)\noptions(\n  ggplot2.discrete.fill = function()\n    scale_fill_manual(values = wong_eight)\n)\n\n# For axis labels\nscientific <- function(x) {\n  parse(text = sprintf(\"10^{%f}\", log10(x)))\n}\n\n# Geometric mean\ngm <- function(x) exp(mean(log(x)))\n```\n:::\n\n\n\n# Model\n\n## Epidemic\n\nWe assume an epidemic that grows (deterministically) exponentially starting\nfrom one infected person in a population of 2.5M people (roughly the DITP sewershed).\nWe stop the simulation when $\\approx 50\\%$ of people have been infected.\nWe also assume that infected people shed the virus deterministically for a fixed\nnumber of days, starting with the day they are infected.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# All times in days\ndoubling_time <- 4\ngrowth_rate <- log(2) / doubling_time\nshedding_duration <- 7\n\npopulation_size <- 2.5e6\n# Grow until ~50% of people have been infected\nmax_day <- floor(log(growth_rate * population_size / 2) / growth_rate)\n\nepi_model <- tibble(\n  day = 1:max_day,\n  # Exponential growth from a single case\n  incidence = exp(day * growth_rate) / population_size,\n  cumulative_incidence = cumsum(incidence),\n  # Assume constant shedding for `shedding_duration` days\n  prevalence = slide_dbl(incidence, sum, .before = shedding_duration - 1, .complete = FALSE)\n)\n\nepi_model %>%\n  ggplot(aes(x = day)) +\n  geom_line(aes(y = cumulative_incidence, color = \"Cumulative Incidence\")) +\n  geom_line(aes(y = prevalence, color = \"Prevalence\")) +\n  labs(x = NULL, y = NULL, color = NULL)\n```\n\n::: {.cell-output-display}\n![Epidemic progress by day](index_files/figure-html/epi-model-1.png){width=672}\n:::\n:::\n\n\n\n\n## Sampling and sequencing\n\n* We assume that the wastewater and pooled nasal swabs are collected every day,\nand that each sample is sequenced to a constant number of total reads.\n* For each sample type, we assume that all reads are the same length and that\ncoverage is even along the genome so that\nthe probability that a read covers the junction is the read length divided\nby the genome length.\n* We assume that a junction is detected when the cumulative number of reads that cover it across all samples is greater than or equal to a threshold.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# TODO: implement sampling interval. Currently implicitly daily\n# sampling_interval <- 1\n\nswab_pool_size <- 300\ntotal_reads_swab <- 2e6\ntotal_reads_ww <- 3e9\n\n# All lengths in bp\ngenome_length <- 7000\nread_length_swab <- 2000\nread_length_ww <- 300\n\n# Probability that a read covers the junction, assuming even coverage\npr_junction_swab <- read_length_swab / genome_length\npr_junction_ww <- read_length_ww / genome_length\n\n# Number of reads required to detect a junction\ndetection_threshold <- 1\n```\n:::\n\n\n\n# Simulations\n\nFor model and parameter definitions, see the [appendix](https://naobservatory.github.io/swab-based-p2ra/) to our blog post.\n\nFirst, we load our posterior samples from the swab-p2ra blog post repo.\nThen, we filter and downsample them in three ways:\n\n1. We take only the Rhinoviruses and Coronaviruses, the viruses for which we had\nenough of both swab and wastewater reads to get decent parameter estimates.\n2. We keep the read-model parameters: $\\mu_{swab}$, $\\phi_{swab}$, $\\mu_{ww}$, and $\\phi_{ww}$. (We don't need the estimates of the prevalence in the Boston samples since our simulations provide the prevalence of the virus.)\n3. To speed up experimentation, for each virus, we randomly downsample the posterior draws.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples = 2000\n\nposteriors <- read_tsv(\"https://raw.githubusercontent.com/naobservatory/swab-based-p2ra/refs/heads/main/tables/posteriors.tsv\")\n\nthinned_posteriors <- posteriors %>%\n  filter(group %in% c(\"Rhinoviruses\", \"Coronaviruses (seasonal)\", \"Coronaviruses (SARS-CoV-2)\")) %>%\n  select(species, group, mu_swab, phi_swab, mu_ww, phi_ww) %>%\n  group_by(species, group) %>%\n  slice_sample(n = n_samples) %>%\n  mutate(rep = 1:n()) \n```\n:::\n\n\n\nNext, for each virus and for each replicate (posterior draw), we simulate the wastewater\nand swab reads according to the model.\nWe then summarize each replicate by the cumulative incidence at detection for each sample type.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndetection <- thinned_posteriors %>%\n  cross_join(epi_model) %>%\n  group_by(rep, .add = TRUE) %>%\n  mutate(\n    mean_ww = prevalence * mu_ww * total_reads_ww * pr_junction_ww,\n    reads_ww = rnbinom(n(), size = phi_ww, mu = mean_ww),\n    cum_reads_ww = cumsum(reads_ww),\n    # Number of swabs from infected people\n    pos_swabs = rbinom(n(), size = swab_pool_size, prob = prevalence),\n    mean_swab = (pos_swabs / swab_pool_size) * mu_swab * total_reads_swab * pr_junction_swab,\n    # Use a finite overdispersion when size and mu are both zero\n    # avoids generating NaNs. Should always give zero.\n    reads_swab = rnbinom(n(), size = pmax(phi_swab * pos_swabs, 1e-10), mu = mean_swab),\n    cum_reads_swab = cumsum(reads_swab),\n  ) %>%\n  summarize(\n    mu_ww = first(mu_ww),\n    phi_ww = first(phi_ww),\n    mu_swab = first(mu_swab),\n    phi_swab = first(phi_swab),\n    # If undetected, use 100% CI\n    ci_at_detection_ww = if_else(\n      any(cum_reads_ww >= detection_threshold),\n      cumulative_incidence[which.max(cum_reads_ww >= detection_threshold)],\n      1.0\n    ),\n    ci_at_detection_swab = if_else(\n      any(cum_reads_swab >= detection_threshold),\n      cumulative_incidence[which.max(cum_reads_swab >= detection_threshold)],\n      1.0\n    ),\n  )\n```\n:::\n\n\n\nIn a small number of replicates, a method does not detect the virus by the end of the simulations.\nIn these cases, the cumulative incidence at detection is between 50% and 100%,\nand we record it as 100%.\nWe can confirm that this is rare (counts out of 2000 replicates per virus):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndetection %>%\n  summarize(\n    swab = sum(ci_at_detection_swab > 0.99),\n    wastewater = sum(ci_at_detection_ww > 0.99)\n  ) %>%\n  select(-group) %>%\n  kable\n```\n\n::: {.cell-output-display}\n\n\n|species      | swab| wastewater|\n|:------------|----:|----------:|\n|HCoV-229E    |    0|          0|\n|HCoV-HKU1    |    0|          3|\n|HCoV-NL63    |    0|          1|\n|HCoV-OC43    |    0|          0|\n|Rhinovirus A |    0|          0|\n|Rhinovirus B |    0|          4|\n|Rhinovirus C |    0|          0|\n|SARS-CoV-2   |    0|          0|\n\n\n\nNumber of replicates where the virus is not detected\n:::\n:::\n\n\n\n# Results\n\nBelow are the results of our simulations.\nNote that all the values here are conditional on the parameters defined\nin the Model section.\nIf we change the pool sizes, sequencing depths, read lengths, etc, the comparisons\nwill change.\n\nFirst, we summarize the simulations with the geometric mean cumulative incidence\nat detection for each virus and sample type:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeom_means <- detection %>%\n  summarize(\n    ci_at_detection_ww = gm(ci_at_detection_ww),\n    ci_at_detection_swab = gm(ci_at_detection_swab),\n    ratio = ci_at_detection_ww / ci_at_detection_swab,\n    .groups = \"drop\",\n  )\n\ngeom_means %>%\n  select(- group) %>%\n  rename(\n    wastewater = ci_at_detection_ww,\n    swab = ci_at_detection_swab,\n  ) %>%\n  kable(digits = c(NA, 6, 6, 3)) %>%\n  column_spec(c(2, 3, 4), width = \"3cm\", monospace = TRUE) \n```\n\n::: {.cell-output-display}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> species </th>\n   <th style=\"text-align:right;\"> wastewater </th>\n   <th style=\"text-align:right;\"> swab </th>\n   <th style=\"text-align:right;\"> ratio </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> HCoV-229E </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.000722 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.000615 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 1.175 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> HCoV-HKU1 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.004255 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.001364 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 3.120 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> HCoV-NL63 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.003247 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.002126 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 1.527 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> HCoV-OC43 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.001137 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.001453 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.782 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rhinovirus A </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.004307 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.003714 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 1.160 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rhinovirus B </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.005154 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.001626 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 3.169 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rhinovirus C </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.000721 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.001275 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.565 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SARS-CoV-2 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.000018 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.000896 </td>\n   <td style=\"text-align:right;width: 3cm; font-family: monospace;\"> 0.021 </td>\n  </tr>\n</tbody>\n</table>\n\n\n\nGeometric mean cumulative incidence at detection\n:::\n:::\n\n\n\nWe can also plot the full joint distributions of cumulative incidence at detection:\n\n\n\n::: {.cell .fig-cap-location-top}\n\n```{.r .cell-code}\ndetection %>%\n  ggplot(aes(ci_at_detection_swab, ci_at_detection_ww, color = group)) +\n  geom_abline(intercept = 0, slope = 1, color = \"grey\") +\n  geom_density_2d() +\n  geom_point(data = geom_means, color = \"black\") +\n  scale_x_log10() +\n  scale_y_log10() +\n  facet_wrap(~species, nrow = 2) +\n  theme(legend.position = \"none\") +\n  labs(x = NULL, y = NULL)\n  # labs(x = \"CI at swab detection\", y = \"CI at wastewater detection\")\n```\n\n::: {.cell-output-display}\n![Black dot show geometric means. Grey line is equal incidence.](index_files/figure-html/joint-distribution-1.png){width=672}\n:::\n\nCumulative incidence at detection: wastewater vs. swab\n:::\n\n\n\nFinally, we can plot the distribution of the ratio of CI at detection in the two methods:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndetection %>%\n  mutate(ratio = ci_at_detection_ww / ci_at_detection_swab) %>%\n  ggplot(aes(ratio, species, fill = group)) +\n  geom_violin(draw_quantiles = c(0.15, 0.5, 0.85)) +\n  scale_x_continuous(transform = \"log10\", labels = scientific) +\n  theme(legend.position = \"none\") +\n  labs(x = NULL, y = NULL)\n```\n\n::: {.cell-output-display}\n![Vertical bars are 15, 50, and 85th percentiles](index_files/figure-html/ratio-1.png){width=672}\n:::\n\nCI at wastewater detection / CI at swab detection\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}